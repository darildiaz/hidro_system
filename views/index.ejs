<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Socket.IO -->
    <script src="/socket.io/socket.io.js"></script>
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <h1 class="display-4 fw-bold">
                        <i class="bi bi-droplet-fill"></i>
                        Sistema de Hidroponía Automatizado
                    </h1>
                    <p class="lead">Control inteligente de cultivos hidropónicos con monitoreo en tiempo real</p>
                </div>
                <div class="col-lg-4 text-center">
                    <div class="status-indicator online"></div>
                    <span class="text-white fw-bold">Sistema Online</span>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <!-- Estado del Sistema -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="main-card">
                    <div class="card-header">
                        <h5><i class="bi bi-info-circle"></i> Estado del Sistema</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="status-icon text-success">
                                            <i class="bi bi-thermometer-half"></i>
                                        </div>
                                        <div class="status-value" id="current-temp">--°C</div>
                                        <div class="status-label">Temperatura</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="status-icon text-info">
                                            <i class="bi bi-droplet"></i>
                                        </div>
                                        <div class="status-value" id="current-humidity">--%</div>
                                        <div class="status-label">Humedad</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="status-icon text-warning">
                                            <i class="bi bi-clock"></i>
                                        </div>
                                        <div class="status-value" id="system-uptime">--</div>
                                        <div class="status-label">Tiempo Activo</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="status-icon text-primary">
                                            <i class="bi bi-activity"></i>
                                        </div>
                                        <div class="status-value" id="active-schedules">--</div>
                                        <div class="status-label">Horarios Activos</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Control de Relés -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="main-card">
                    <div class="card-header">
                        <h5><i class="bi bi-toggle-on"></i> Control de Relés</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 mb-4">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <i class="bi bi-lightbulb text-warning" style="font-size: 2rem;"></i>
                                        </div>
                                        <h6 class="fw-bold">Relé 1 - Iluminación</h6>
                                        <div class="form-check form-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="rele1" style="width: 3rem; height: 1.5rem;">
                                        </div>
                                        <small class="text-muted">Control de luces LED</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-4">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <i class="bi bi-droplet-fill text-primary" style="font-size: 2rem;"></i>
                                        </div>
                                        <h6 class="fw-bold">Relé 2 - Bomba de Agua</h6>
                                        <div class="form-check form-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="rele2" style="width: 3rem; height: 1.5rem;">
                                        </div>
                                        <small class="text-muted">Sistema de riego</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-4">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <i class="bi bi-wind text-success" style="font-size: 2rem;"></i>
                                        </div>
                                        <h6 class="fw-bold">Relé 3 - Ventilación</h6>
                                        <div class="div class="form-check form-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="rele3" style="width: 3rem; height: 1.5rem;">
                                        </div>
                                        <small class="text-muted">Control de aire</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-4">
                                <div class="status-card text-center">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <i class="bi bi-thermometer-half text-danger" style="font-size: 2rem;"></i>
                                        </div>
                                        <h6 class="fw-bold">Relé 4 - Calefacción</h6>
                                        <div class="form-check form-switch d-flex justify-content-center">
                                            <input class="form-check-input" type="checkbox" id="rele4" style="width: 3rem; height: 1.5rem;">
                                        </div>
                                        <small class="text-muted">Control térmico</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráficos y Monitoreo -->
        <div class="row mb-4">
            <div class="col-lg-8 mb-4">
                <div class="main-card">
                    <div class="card-header">
                        <h5><i class="bi bi-graph-up"></i> Histórico de Sensores</h5>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="sensorChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mb-4">
                <div class="main-card">
                    <div class="card-header">
                        <h5><i class="bi bi-list-check"></i> Actividades Recientes</h5>
                    </div>
                    <div class="card-body">
                        <div id="recent-activities">
                            <div class="text-center text-muted">
                                <i class="bi bi-clock-history" style="font-size: 2rem;"></i>
                                <p class="mt-2">Cargando actividades...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Acciones Rápidas -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="main-card">
                    <div class="card-header">
                        <h5><i class="bi bi-lightning"></i> Acciones Rápidas</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <button class="btn btn-hidro w-100" onclick="activateAllRele()">
                                    <i class="bi bi-play-circle"></i> Activar Todo
                                </button>
                            </div>
                            <div class="col-md-3 mb-3">
                                <button class="btn btn-hidro-outline w-100" onclick="deactivateAllRele()">
                                    <i class="bi bi-stop-circle"></i> Desactivar Todo
                                </button>
                            </div>
                            <div class="col-md-3 mb-3">
                                <button class="btn btn-hidro-outline w-100" onclick="createBackup()">
                                    <i class="bi bi-download"></i> Crear Respaldo
                                </button>
                            </div>
                            <div class="col-md-3 mb-3">
                                <button class="btn btn-hidro-outline w-100" onclick="restartSystem()">
                                    <i class="bi bi-arrow-clockwise"></i> Reiniciar Sistema
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h5><i class="bi bi-droplet-fill"></i> Sistema de Hidroponía</h5>
                    <p>Control automatizado para cultivos hidropónicos profesionales</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <h5>Desarrollado por</h5>
                    <p><strong>Ing. Daril Díaz</strong> - 2024</p>
                    <p><small>Versión 1.0 - Modo Desarrollo</small></p>
                </div>
            </div>
        </div>
    </footer>

    <!-- Bootstrap 5 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="/js/main.js"></script>
    
    <script>
        // Inicialización de Socket.IO
        let socket;
        
        try {
            if (typeof io !== 'undefined') {
                socket = io();
                console.log('Socket.IO conectado correctamente');
            } else {
                console.warn('Socket.IO no disponible');
            }
        } catch (error) {
            console.warn('Error inicializando Socket.IO:', error);
        }

        // Configurar Socket.IO si está disponible
        if (socket) {
            socket.on('connect_error', (error) => {
                console.error('Error de conexión Socket.IO:', error);
            });

            socket.on('sensor_data', (data) => {
                updateSensorData(data);
            });

            socket.on('rele_states', (states) => {
                updateReleStates(states);
            });

            socket.on('rele_control_result', (result) => {
                if (result.success) {
                    showNotification(`Relé ${result.releId} ${result.state ? 'activado' : 'desactivado'}`, 'success');
                } else {
                    showNotification(`Error: ${result.error}`, 'danger');
                }
            });
        }

        // Variables globales
        let sensorChart;
        let sensorData = {
            labels: [],
            temperature: [],
            humidity: []
        };

        // Inicializar gráfico
        function initChart() {
            const ctx = document.getElementById('sensorChart').getContext('2d');
            sensorChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: sensorData.labels,
                    datasets: [{
                        label: 'Temperatura (°C)',
                        data: sensorData.temperature,
                        borderColor: '#28a745',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4,
                        yAxisID: 'y'
                    }, {
                        label: 'Humedad (%)',
                        data: sensorData.humidity,
                        borderColor: '#0dcaf0',
                        backgroundColor: 'rgba(13, 202, 240, 0.1)',
                        tension: 0.4,
                        yAxisID: 'y1'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    scales: {
                        x: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Tiempo'
                            }
                        },
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Temperatura (°C)'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Humedad (%)'
                            },
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    }
                }
            });
        }

        // Actualizar datos de sensores
        function updateSensorData(data) {
            if (data && data.temperature !== undefined && data.humidity !== undefined) {
                const now = new Date().toLocaleTimeString();
                
                // Agregar nuevos datos
                sensorData.labels.push(now);
                sensorData.temperature.push(data.temperature);
                sensorData.humidity.push(data.humidity);
                
                // Mantener solo los últimos 20 puntos
                if (sensorData.labels.length > 20) {
                    sensorData.labels.shift();
                    sensorData.temperature.shift();
                    sensorData.humidity.shift();
                }
                
                // Actualizar gráfico
                if (sensorChart) {
                    sensorChart.update();
                }
                
                // Actualizar valores actuales
                document.getElementById('current-temp').textContent = `${data.temperature}°C`;
                document.getElementById('current-humidity').textContent = `${data.humidity}%`;
            }
        }

        // Actualizar estados de relés
        function updateReleStates(states) {
            states.forEach((state, index) => {
                const releId = index + 1;
                const checkbox = document.getElementById(`rele${releId}`);
                if (checkbox) {
                    checkbox.checked = state.active;
                }
            });
        }

        // Control de relés
        function controlRele(releId, state) {
            if (socket) {
                socket.emit('control_rele', { releId, state, reason: 'Control manual' });
            } else {
                // Fallback si no hay Socket.IO
                showNotification(`Relé ${releId} ${state ? 'activado' : 'desactivado'}`, 'info');
            }
        }

        // Event listeners para relés
        document.getElementById('rele1').addEventListener('change', (e) => {
            controlRele(1, e.target.checked);
        });
        
        document.getElementById('rele2').addEventListener('change', (e) => {
            controlRele(2, e.target.checked);
        });
        
        document.getElementById('rele3').addEventListener('change', (e) => {
            controlRele(3, e.target.checked);
        });
        
        document.getElementById('rele4').addEventListener('change', (e) => {
            controlRele(4, e.target.checked);
        });

        // Acciones rápidas
        function activateAllRele() {
            for (let i = 1; i <= 4; i++) {
                controlRele(i, true);
            }
            showNotification('Todos los relés activados', 'success');
        }

        function deactivateAllRele() {
            for (let i = 1; i <= 4; i++) {
                controlRele(i, false);
            }
            showNotification('Todos los relés desactivados', 'info');
        }

        function createBackup() {
            fetch('/api/system/control', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ action: 'backup' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Respaldo creado correctamente', 'success');
                } else {
                    showNotification(`Error: ${data.error}`, 'danger');
                }
            })
            .catch(error => {
                showNotification(`Error: ${error.message}`, 'danger');
            });
        }

        function restartSystem() {
            if (confirm('¿Estás seguro de que quieres reiniciar el sistema?')) {
                fetch('/api/system/control', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action: 'restart' })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Sistema reiniciándose...', 'warning');
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        showNotification(`Error: ${data.error}`, 'danger');
                    }
                })
                .catch(error => {
                    showNotification(`Error: ${error.message}`, 'danger');
                });
            }
        }

        // Sistema de notificaciones
        function showNotification(message, type = 'info') {
            const toastContainer = document.getElementById('toast-container') || createToastContainer();
            
            const toast = document.createElement('div');
            toast.className = `toast show bg-${type} text-white`;
            toast.innerHTML = `
                <div class="toast-body">
                    <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'}"></i>
                    ${message}
                </div>
            `;
            
            toastContainer.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }

        function createToastContainer() {
            const container = document.createElement('div');
            container.id = 'toast-container';
            container.className = 'toast-container position-fixed top-0 end-0 p-3';
            container.style.zIndex = '9999';
            document.body.appendChild(container);
            return container;
        }

        // Inicializar cuando el DOM esté listo
        document.addEventListener('DOMContentLoaded', function() {
            initChart();
            
            // Simular datos iniciales si no hay Socket.IO
            if (!socket) {
                const mockData = {
                    temperature: 22 + Math.random() * 8,
                    humidity: 50 + Math.random() * 30
                };
                updateSensorData(mockData);
            }
            
            // Actualizar tiempo del sistema
            setInterval(() => {
                const uptime = Math.floor((Date.now() - performance.timing.navigationStart) / 1000);
                const hours = Math.floor(uptime / 3600);
                const minutes = Math.floor((uptime % 3600) / 60);
                document.getElementById('system-uptime').textContent = `${hours}h ${minutes}m`;
            }, 1000);
        });
    </script>
</body>
</html> 